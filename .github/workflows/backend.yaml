name: Backend
on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yaml'
    branches:
      - main
  pull_request:
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yaml'
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cache node modules
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-cache
          
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install deps
        run: cd backend && npm i

      - name: Build
        run: cd backend && npm run build

      - name: Store Artifact
        uses: actions/upload-artifact@v4
        with: 
          name: backend-artifact
          path: backend/build/

  lint:
    needs: [build] #name should be same as above job because, this step will run after the build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      # add caching so using the cache
      - name: Cache node modules 
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-cache
      # This will install node only if the above steps is not true or if cache is missed
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd backend && npm i

      - name: Lint the code
        run: cd backend && npm run lint

  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-cache

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd backend && npm i

      - name: Run Unit Tests
        run: cd backend && npm t

  static-analysis:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      # - name: Initialize CodeQL
      #   uses: github/codeql-action/init@v3
      #   with:
      #     languages: javascript

      # - name: Setup Node
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: 16.x

      # - name: Install dependencies
      #   run: cd backend && npm i

      # - name: Build
      #   run: cd backend && npm run build

      # - name: Perform Analysis
      #   uses: github/codeql-action/analyze@v3

  security-audit:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
# This will checkout if the installed packages are having any vulnerabilities
      - name: Check for security issues
        run: cd backend && npm audit --audit-level=none

  deploy_to_eb:
    #if: github.ref == 'refs/heads/main'
    needs: [static-analysis, security-audit, lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Get Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-artifact
          path: backend/build

      - name: Prepare ProcFile
        run: |
          echo "web: node server.js" > backend/build/Procfile

      - name: Prepare ZIP file
        run: cd backend/build && ls && zip -r artifact.zip ./ -x '*.git*'

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: AnyHasher
          environment_name: AnyHasher-new
          version_label: anyhasher-${{ github.run_number }}
          region: us-east-1
          deployment_package: backend/build/artifact.zip

